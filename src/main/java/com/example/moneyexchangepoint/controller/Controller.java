package com.example.moneyexchangepoint.controller;

import com.example.moneyexchangepoint.dto.*;
import com.example.moneyexchangepoint.dto.inputdata.*;
import com.example.moneyexchangepoint.entity.ExchangeRates;
import com.example.moneyexchangepoint.exception.ValidationException;
import io.swagger.v3.oas.annotations.Operation;
import org.springframework.http.ResponseEntity;

import java.util.List;

public interface Controller {

    @Operation(summary = "Открытие рабочего дня", description = "В рамках данной операции приложение вызывает " +
            "API ПриватБанка и получает текущие обменные курсы по таким валютам, как доллар, евро и российский рубль. " +
            "После этого устанавливает собственные обменные курсы по указанным валютам и сохраняет их в БД. " +
            "По завершению этой операции приложение готово к работе.")
    List<ExchangeRates> startWork(InputDataForRates inputData);


    @Operation(summary = "Сохранение заявки на обмен валюты", description = "Данная операция формирует и сохраняет в БД " +
            "заявку на обмен валюты. Входными данными для формирования завки являются: имя клиента, номер мобильного " +
            "телефона клиента, продаваемая валюта, сумма продаваемой валюты, покупаемая валюта. После завершения " +
            "данной операции сервис возвращает: уникальный номер заявки, присвоенный БД, сумму покупаемой валюты, " +
            "номер мобильного телефона клиента и ОТП-пароль (передается клиенту). Заявке в БД присваивается статус " +
            "\"Новая\". Продаваемая и покупаемая валюты задаются через код (гривна - UAH, доллар - USD, евро - EUR, " +
            "рубль - RUR). Код валюты вводится в верхнем регистре. Номер мобильного телефона клиента вводится в формате: " +
            "(050) 123-45-67.")
    MoneyExchangeResponse saveExchangeRequest(InputDataForRequest inputData) throws ValidationException;


    @Operation(summary = "Подтверждение заявки на обмен валюты", description = "Данная операция осуществляет " +
            "подтверждение обмена валюты. Клиент сообщает номер мобильного телефона и ОТП-пароль. Если пароль совпадает " +
            "с тем, что вернул предыдущий сервис (\"Сохранение заявки\") операция обмена считается успешной. Сервис " +
            "возвращает ответ \"Пароль верный\" и завке присваивается статус \"Выполнена\". В противном случае сервис " +
            "возвращает ответ \"Пароль неверный\" и завке присваивается статус \"Отменена\".")
    String confirmationExchangeRequest(InputDataForConfirmation inputData);


    @Operation(summary = "Удаление заявки на обмен валюты", description = "Данная операция позволяет удалить заявку на " +
            "обмен валюты по номеру телефона клиента если она имеет статус \"Новая\". Номер мобильного телефона клиента " +
            "вводится в формате: (050) 123-45-67.")
    ResponseEntity<String> deleteRequestByPhone(InputDataForDelete inputData);


    @Operation(summary = "Удаление заявки на обмен валюты", description = "Данная операция позволяет удалить заявку на " +
            "обмен валюты по номеру Id")
    ResponseEntity<String> deleteRequestById(Integer id);


    @Operation(summary = "Окончание рабочего дня", description = "В рамках данной операции формируется отчет о работе " +
            "обменного пункта за день. Отчет содержит в себе данные по общему количеству проведенных операций (заявки " +
            "со статусом \"Выполнена\") по покупке/продаже валют, а также суммы покупки и продажи по каждой валюте за день.")
    MoneyExchangeReportForDay finishWork();


    @Operation(summary = "Получение отчета за период", description = "Данная операция дает возможность получить информацию " +
            "по суммам покупки и продажи конкретной валюты за указанный период времени. Входными данными для этой операции " +
            "являются: тип валюты, дата начала и дата окончания периода времени. Тип валюты задается через код (гривна - UAH, " +
            "доллар - USD, евро - EUR, рубль - RUR). Код валюты вводится в верхнем регистре. Дата вводится в формате: " +
            "год-месяц-число (2021-09-30).")
    MoneyExchangeReportForPeriod getReportForPeriod(InputDataForPeriod inputData);
}
